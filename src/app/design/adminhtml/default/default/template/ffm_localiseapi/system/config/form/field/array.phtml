<?php
/**
 * Ffm_LocaliseApi extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT License
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/mit-license.php
 *
 * @category       Ffm
 * @package        Ffm_LocaliseApi
 * @copyright      Copyright (c) 2015
 * @license        http://opensource.org/licenses/mit-license.php MIT License
 */
/**
 *Template for import triggers
 *
 * @category    Ffm
 * @package     Ffm_LocaliseApi
 * @author      Sander Mangel <s.mangel@fitforme.nl>
 */

$_htmlId = $this->getHtmlId() ? $this->getHtmlId() : '_' . uniqid();

?>

<div class="grid" id="grid<?php echo $_htmlId ?>">
    <table cellpadding="0" cellspacing="0" class="border">
        <tbody>

        <tr class="headings" id="headings<?php echo $_htmlId ?>">
            <?php foreach ($this->_columns as $columnName => $column):?>
                <th><?php echo $column['label'] ?></th>
            <?php endforeach;?>
        </tr>

        </tbody>
    </table>
    <input type="hidden" name="<?php echo $this->getElement()->getName() ?>[__empty]" value="" />
</div>

<script type="text/javascript">
    //<![CDATA[
    // create row creator
    var arrayRow<?php echo $_htmlId ?> = {
        // define row prototypeJS template
        template : new Template(
            '<tr id="#{_id}">'
            <?php foreach ($this->_columns as $columnName => $column):?>
            +'<td>'
            +'<?php echo Mage::helper('core')->jsQuoteEscape($this->_renderCellTemplate($columnName)) ?>'
            +'<\/td>'
            <?php endforeach;?>
           +'<\/tr>'
        ),

        rowsCount : 0,

        add : function(templateData, insertAfterId)
        {
            // generate default template data
            if ('' == templateData) {
                var d = new Date();
                var templateData = {
                <?php foreach ($this->_columns as $columnName => $column):?>
                <?php echo $columnName ?> : '',
                    <?php endforeach;?>
                    _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        // insert before last row
        if ('' == insertAfterId) {
        Element.insert($('addRow<?php echo $_htmlId ?>'), {before: this.template.evaluate(templateData)});
    }
    // insert after specified row
    else {
        Element.insert($(insertAfterId), {after: this.template.evaluate(templateData)});
    }

    this.rowsCount += 1;
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $_htmlId ?>').hide();
        $('empty<?php echo $_htmlId ?>').show();
    }
    }

    // add existing rows
    <?php
    $_addAfterId = "headings{$_htmlId}";
    foreach ($this->getArrayRows() as $_rowId => $_row) {
        echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ", '{$_addAfterId}');\n";
        $_addAfterId = $_rowId;
    }
    ?>

    // if no rows, hide grid and show button only
    <?php if (!$this->getArrayRows()):?>
    arrayRow<?php echo $_htmlId ?>.showButtonOnly();
    <?php endif;?>

    // toggle the grid, if element is disabled (depending on scope)
    <?php if ($this->getElement()->getDisabled()):?>
    toggleValueElements({checked:true}, $('grid<?php echo $_htmlId ?>').parentNode);
    <?php endif;?>
    //]]>
</script>
